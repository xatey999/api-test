{
    "openapi": "3.0.0",
    "info": {
        "title": "Doctor Appointment API",
        "description": "API Documentation for Doctor Appointment System",
        "contact": {
            "email": "ujjwal999adhikari@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/",
            "description": "Doctor Appointment API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user and generate token",
                "description": "Login a user and return a token along with user details",
                "operationId": "42f77e072dec84b0e1094cca1228298e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "ujjwal@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                                        },
                                        "user": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "patient"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doctor/store": {
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Store a newly created doctor's information",
                "description": "Store a doctor's information and return the stored data along with a success message",
                "operationId": "96def4a2d4f11c8823f3beac2a1f8e43",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "doctor_description",
                                    "doctor_phone",
                                    "department_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "doctor_description": {
                                        "type": "string",
                                        "example": "Experienced Cardiologist with 10 years of practice."
                                    },
                                    "doctor_phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doctor information stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "doctor": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "doctor_description": {
                                                    "type": "string",
                                                    "example": "Experienced Cardiologist with 10 years of practice."
                                                },
                                                "doctor_phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-08-27T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-08-27T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Doctor information stored successfully"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Doctor data already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You already have inserted your data"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "doctor_description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The doctor_description field is required."
                                                    }
                                                },
                                                "doctor_phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The doctor_phone field is required."
                                                    }
                                                },
                                                "department_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The department_id field is required."
                                                    }
                                                },
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get all the schedule list of the current doctor",
                "operationId": "66e486a11c0890278f5328be62bce51e",
                "responses": {
                    "200": {
                        "description": "A specific schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedules"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Store a newly created schedule for a doctor",
                "description": "Store a doctor's schedule and return the stored data along with a success message",
                "operationId": "9a8fc6c84a98c5fad3940068fce37f8e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "day",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "day": {
                                        "type": "string",
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "example": "Monday"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "06:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "07:30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "day": {
                                                    "type": "string",
                                                    "example": "Monday"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Schedule created successfully"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "day": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The day field is required."
                                                    }
                                                },
                                                "start_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start_time field is required."
                                                    }
                                                },
                                                "end_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end_time field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedules/{id}": {
            "put": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Update a specific schedule",
                "description": "Update details of a specific schedule by ID.",
                "operationId": "9f1b60fd5b17d4c7e5f1df73ddd5c02c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "week_day",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "day": {
                                        "type": "string",
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "example": "Monday"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule Updated"
                                        },
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "day": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Sunday",
                                                        "Monday",
                                                        "Tuesday",
                                                        "Wednesday",
                                                        "Thursday",
                                                        "Friday",
                                                        "Saturday"
                                                    ],
                                                    "example": "Monday"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to update with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "day": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected week_day is invalid."
                                                    }
                                                },
                                                "start_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start_time field is required and must be a valid time."
                                                    }
                                                },
                                                "end_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end_time field is required and must be a valid time."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete a specific schedule",
                "operationId": "0ecfded55ace08cb3a917fd20b19f6ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Schedules": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "day": {
                        "type": "string",
                        "example": "Monday"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "17:00:00"
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-27T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-27T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format: `Bearer {token}`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Doctors",
            "description": "Doctors"
        },
        {
            "name": "Schedules",
            "description": "Schedules"
        }
    ]
}